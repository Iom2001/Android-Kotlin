
import android.app.Activity
import android.content.Intent
import android.content.pm.PackageManager
import android.net.Uri
import android.support.v7.app.AppCompatActivity
import android.os.Bundle
import android.provider.MediaStore
import android.support.v4.app.ActivityCompat
import android.support.v4.content.ContextCompat
import android.view.View
import android.widget.Button
import android.widget.Toast
import java.io.File
import java.util.*
import java.util.jar.Manifest

class com.example.androidkotlin.MainActivity : Activity() {

    private val VIDEO_REQUEST_CODE = 1
    private val REQUEST_PERMISSION_CODE = 100

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val button = findViewById<Button>(R.id.captureButton)

        if(!checkPermissionFromDevice())
            requestPermission()

        button.setOnClickListener {
            if (checkPermissionFromDevice()) {


                videoCapture()


            } else {
                requestPermission()
            }
        }

   }


    private fun checkPermissionFromDevice(): Boolean {
        val writeExternalStorage = ContextCompat.checkSelfPermission(this,android.Manifest.permission.WRITE_EXTERNAL_STORAGE)
        return writeExternalStorage == PackageManager.PERMISSION_GRANTED
    }

    private fun requestPermission() {
        ActivityCompat.requestPermissions(this, arrayOf(android.Manifest.permission.WRITE_EXTERNAL_STORAGE),REQUEST_PERMISSION_CODE)
    }

    override fun onRequestPermissionsResult(requestCode: Int, permissions: Array<out String>, grantResults: IntArray) {

        when(requestCode)
        {
            REQUEST_PERMISSION_CODE -> if(grantResults!!.size > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED)
            {
                Toast.makeText(applicationContext,"Permission Granted...",Toast.LENGTH_LONG).show()
            }

        }


    }

    fun videoCapture ( )
       {
           val intent = Intent(MediaStore.ACTION_VIDEO_CAPTURE)
           val video_file_name = getFilePath()

           val videoUri  : Uri

            /** Check whether android version is greater than lollipop
             *  If yes than will use file provider to pass intent value
             *  else will use normal method
             */

           videoUri = if(android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.LOLLIPOP)
           {
               val authorities = applicationContext.packageName + ".fileprovider"
               FileProvider.getUriForFile(this@DemoVideoCapture,authorities,video_file_name)

           }else
           {
               Uri.fromFile(video_file_name)

           }


           intent.putExtra(MediaStore.EXTRA_OUTPUT,videoUri)
           intent.putExtra(MediaStore.EXTRA_VIDEO_QUALITY,1)
           startActivityForResult(intent,VIDEO_REQUEST_CODE)


       }


     fun getFilePath () : File
    {
       val folder = File("sdcard/Kotlin_Media_Capture")
        if(!folder.exists())
        {
            folder.mkdir()
        }

        val video_file_name = File(folder,"example_video_"+System.currentTimeMillis()+".mp4")

        return video_file_name
    }

    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {

        if(requestCode == VIDEO_REQUEST_CODE)
        {
            if(resultCode== RESULT_OK)
            {
                Toast.makeText(applicationContext,"Video Recorded Successfully...",Toast.LENGTH_LONG).show()
            }
            else
            {
               Toast.makeText(applicationContext,"Video Recorded Failed...",Toast.LENGTH_LONG).show()

            }
        }

    }
}
